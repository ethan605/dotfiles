" vim:fileencoding=utf-8:filetype=vim:foldenable:foldmethod=marker:foldmarker=[[[,]]]

" [[[ 1. General config
" Use Neovim as default editor
set vicmd=nvim

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.
set syscalls

" Open with preview window
view

" Trash Directory
set trash

" This is how many directories to store in the directory history.
set history=1000

" Automatically resolve symbolic links on l or Enter.
set nofollowlinks

" Natural sort of (version) numbers within text.
set sortnumbers

" Maximum number of changes that can be undone.
set undolevels=100

" If you would like to run an executable file when you
" press return on the file name set this.
set norunexec

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt=%Y/%m/%d\ %H:%M

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase letter
set ignorecase
set smartcase

" Don't highlight search results automatically
set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Status line with:
"   - file title
"   - file attributes
"   - file size (human-readable)
"   - modification date
set statusline=" %t%= %A %10s %20d "

" Color scheme
colorscheme minimal

" Don't do too many requests to slow file systems
if !has('win')
  set slowfs=curlftpfs
endif

" Things that should be stored in vifminfo
set vifminfo=dhistory,chistory,state,shistory,phistory,fhistory,dirstack,registers,bookmarks,bmarks

" Dont show delete confirmation
" set confirm-=delete

" Display hidden files
set dotfiles

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart

" Empty the ruler. By default, it shows the number of directories+files.
" set rulerformat=
" ]]]

" [[[ 2. File preview & file opening

" Text based files
filetype <text/*>,<application/json> nvim %c

" Audio files
filetype <audio/*>,<application/x-font-gdos>
"  \*.ac3,*.ape,*.flac,*.m4a,*.mp3,*.og[agx],*.opus,*.spx,*.wav,*.wma
  \ mpv %c %i &

" Video files
filetype <video/*>
"  \*.3gp,*.as[fx],*.avi,*.dat,*.divx,*.fl[icv],
"  \*.m2v,*.m4v,*.mkv,*.mov,*.mp4,*.mpeg,*.mpg,*.mts,
"  \*.ogv,*.qt,*.r[am],*.ts,*.vob,*.webm,*.wmv,
  \ mpv --fullscreen %c %i &
filetype *.y4m
  \ mpv --fullscreen %c %i &

filetype *.zip
  \ unzip %c

" All other files
{{- if eq .chezmoi.os "darwin" }}

filetype * qlmanage -p %c >> /dev/null 2>&1 &

{{- else if eq .chezmoi.os "linux" }}

filetype * xdg-open %c &

{{- end }}

" Dont show preview on ../
fileviewer ../ echo > /dev/null

" Show content tree in the preview window for directories
fileviewer */ exa --all --color=always --group-directories-first --level=1 --long --no-filesize --no-time --no-user --tree %c
fileviewer .*/ exa --all --color=always --group-directories-first --level=1 --long --no-filesize --no-time --no-user --tree %c

" Text files
fileviewer <text/*>,<application/json>
  \ env -uCOLORTERM bat --number --color always --pager never --theme 'Sublime Snazzy' --wrap never %c

" Archives
fileviewer *.7z 7z l %c
fileviewer *.ear,*.jar,*.oxt,*.war,*.zip zip -sf %c
fileviewer *.rar unrar v %c
fileviewer *.tar tar -tf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.gz,*.tgz tar -tzf %c
fileviewer *.tar.txz,*.txz xz --list --verbose %c
fileviewer *.tlz lzip --list --verbose %c

" All other files
fileviewer *,.DS_Store file --brief %c && echo "Mime: $(file --brief --mime %c)"
" ]]]

" [[[ 3. Key mappings 

" Go to the file that is right before "../" for going to the top most file
nnoremap gg ggj

" Quick shortcuts to some dirs 
nnoremap dts :cd ~/.dotfiles<cr>
nnoremap dcs :cd ~/Documents<cr>
nnoremap dls :cd ~/Downloads<cr>
nnoremap drb :cd ~/Dropbox<cr>
nnoremap mov :cd ~/Movies<cr>
nnoremap msc :cd ~/MEGA/Music<cr>

" Start shell in current directory
nnoremap s :shell<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in the background using its default program
nnoremap gb :file &<cr>l

{{- if eq .chezmoi.os "darwin" }}

" Yank current directory path into the clipboard
nnoremap yd :!echo -n %d | pbcopy %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo -n %c:p | pbcopy %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

{{- else if eq .chezmoi.os "linux" }}

" Yank current directory path into the clipboard
nnoremap yd :!echo -n %d | wl-copy %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo -n %c:p | wl-copy %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

{{- end }}

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Make a new directory
nnoremap mkd :mkdir<space>

" Quickly shrink left pane
nnoremap <c-v> <c-w>50|

" ]]]

" [[[ 4. Icons

" file types
set classify='  :dir:/,  :exe:,  :reg:,  :link:'

" various file names
set classify+='  ::../::,  ::copying::,  ::*.epub,,*.fb2,,*.djvu,,*.prc::,  ::*.pdf::'

" archives
set classify+='  ::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.deb,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.xz,,*.z,,*.zip,,*.zoo::'

" images
set classify+='  ::*.bmp,,*.gif,,*.ico,,*.jpeg,,*.jpg,,*.png,,*.ppm,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd::'

" audio
set classify+='  ::*.aac,,*.ac3,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma::'

" media
set classify+='  ::*.avi,,*.axv,,*.divx,,*.flv,,*.m2v,,*.m4[pv],,*.m[ko]v,,*.mp[4g],,*.mp4v,,*.mpeg,,*.nuv,,*.ogv,,*.p[bg]m,,*.qt,,*.vob,,*.wmv,,*.xvid,,*.mka::'

" office files
set classify+='  ::*.doc,,*.docx::,  ::*.pptx,,*.ppt::,  ::*.xls,,*.xls[mx]::'

" extracted from vim-devicons - exact matches
set classify+=' 1 ::exact-match-case-sensitive-1.txt::'
set classify+=' 2 ::exact-match-case-sensitive-2::'
set classify+='  ::gruntfile.coffee,,gruntfile.[jlt]s::'
set classify+='  ::gulpfile.coffee,,gulpfile.[jlt]s,,gulpfile.[jlt]s/::'
set classify+='  ::mix.lock::'
set classify+='  ::dropbox/::'
set classify+='  ::.ds_store,,.bashrc,,.zshrc,,.bashprofile,,makefile,,cmakelists.txt,,.env,,.env.*,,.babel*::'
set classify+='  ::.git*,,.git/,,*.git/::'
set classify+='  ::.gitlab-ci.yml::'
set classify+='  ::.vimrc,,.gvimrc,,_vimrc,,_gvimrc::'
set classify+='  ::favicon.ico::'
set classify+='  ::license::'
set classify+='  ::.nvmrc,,node_modules/::'
set classify+='  ::procfile::'
set classify+='  ::dockerfile,,docker-compose.yml::'
set classify+='  ::jenkinsfile::'
set classify+='  ::package.json,,package-lock.json,,yarn.lock,,.yarnrc::'
set classify+='  ::Rakefile,,.rvmrc::'
set classify+='  ::.vscode/::'
set classify+='  ::/Vagrantfile$/::'
set classify+='  ::/.*jquery.*.js$/::'
set classify+='  ::/.*angular.*.js$/::'
set classify+='  ::/.*backbone.*.js$/::'
set classify+='  ::/.*require.*.js$/::'
set classify+='  ::/.*materialize.*.(css|js)$/::'
set classify+='  ::/.*mootools.*.js$/::'

" extracted from vim-devicons - extensions
set classify+='  ::*.ai::'
set classify+='  ::*.awk,,*.bash,,*.[ckz]sh,,*.fish,,*.ps1,,*.sh::'
set classify+='  ::*.bat,,*.conf,,.*ignore,,*.ini,,*.toml,,*.yml,,*.yaml::'
set classify+='  ::*.bson::'
set classify+='  ::*.c,,*.c[cp],,*.c++,,*.cpp,,*.cxx,,*.m::'
set classify+='  ::*.clj,,*.cljc::'
set classify+='  ::*.cljs,,*.edn::'
set classify+='  ::*.coffee::'
set classify+='  ::*.cs::'
set classify+='  ::*.css::'
set classify+='  ::*.d::'
set classify+='  ::*.dart::'
set classify+='  ::*.db,,*.dump,,*.sql::'
set classify+='  ::*.diff::'
set classify+='  ::*.elm::'
set classify+='  ::*.erl,,*.hrl::'
set classify+='  ::*.ex,,*.eex,,*.exs,,*.leex::'
set classify+='  ::*.f#,,*.fs,,*.fsi,,*.fsscript,,*.fsx::'
set classify+='  ::*.gemspec,,*.rb::'
set classify+='  ::*.go::'
set classify+='  ::*.h,,*.hh,,*.hpp,,*.hxx::'
set classify+='  ::*.hs,,*.lhs::'
set classify+='  ::*.htm,,*.html,,*.slim,,*.ejs::'
set classify+='  ::*.java::'
set classify+='  ::*.jl::'
set classify+='  ::*.jpg,,*.jpeg,,*.bmp,,*.png,,*.webp,,*.gif,,*.ico::'
set classify+='  ::*.js,,*.mjs::'
set classify+='  ::*.json,,*.jsonp::'
set classify+='  ::*.[jt]sx::'
set classify+='  ::*.less::'
set classify+='  ::*.lua::'
set classify+='  ::*.md,,*.mdx,,*.markdown,,*.rmd::'
set classify+='λ  ::*.ml,,*.mli::'
set classify+='  ::*.mustache,,*.hbs::'
set classify+='  ::*.php::'
set classify+='  ::*.pl,,*.pm,,*.t::'
set classify+='  ::*.pp::'
set classify+='  ::*.psb,,*.psd::'
set classify+='  ::*.py,,*.pyc,,*.pyo,,*.pyd::'
set classify+='  ::*.rlib,,*.rs::'
set classify+='  ::*.rss::'
set classify+='  ::*.s[ac]ss::'
set classify+='  ::*.scala::'
set classify+='  ::*.sln,,*.suo::'
set classify+='  ::*.styl::'
set classify+='  ::*.swift,,*.xcplayground::'
set classify+='  ::*.twig::'
set classify+='  ::*.ts,,types/::'
set classify+='  ::*.vim::'
set classify+='﵂  ::*.vue::'
set classify+='  ::*.xml::'
set classify+='  ::*.xul::'
" ]]]
