# vim:fileencoding=utf-8:filetype=bash
# Pure prompt ported to /bin/bash
# Inspired by:
#  - https://github.com/sindresorhus/pure
#  - https://github.com/dreadatour/dotfiles/blob/master/.bash_profile
#  - https://github.com/sapegin/dotfiles/blob/dd063f9c30de7d2234e8accdb5272a5cc0a3388b/includes/bash_prompt.bash

BLACK="$(/usr/bin/tput setaf 0)"
RED="$(/usr/bin/tput setaf 1)"
GREEN="$(/usr/bin/tput setaf 2)"
YELLOW="$(/usr/bin/tput setaf 3)"
DARK_BLUE="$(/usr/bin/tput setaf 4)"
MAGENTA="$(/usr/bin/tput setaf 5)"
BLUE="$(/usr/bin/tput setaf 6)"
WHITE="$(/usr/bin/tput setaf 7)"
GRAY="$(/usr/bin/tput setaf 8)"
NOCOLOR="$(/usr/bin/tput sgr0)"
local_username="{{ .chezmoi.username }}"

# User color
case $(id -u) in
	0) user_color="$RED" ;;  # root
	*) user_color="$GREEN" ;;
esac

# Symbols
prompt_symbol="λ"
prompt_dirty_symbol="☀ "
prompt_venv_symbol="☁ "

function prompt_command() {
	# Local or SSH session?
	local remote=
	[ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ] && remote=1

	# Git branch name and work tree status (only when we are inside Git working tree)
	local git_prompt=
	if [[ "true" = "$(git rev-parse --is-inside-work-tree 2>/dev/null)" ]]; then
		# Branch name
		local branch="$(git symbolic-ref HEAD 2>/dev/null)"
		branch="$GRAY${branch##refs/heads/}$NOCOLOR"

		# Working tree status (red when dirty)
		local dirty=
		# Modified files
		git diff --no-ext-diff --quiet --exit-code --ignore-submodules 2>/dev/null || dirty=1
		# Untracked files
		[ -z "$dirty" ] && test -n "$(git status --porcelain)" && dirty=1

		# Format Git info
		if [ -n "$dirty" ]; then
			git_prompt=" $RED$prompt_dirty_symbol$branch"
		else
			git_prompt=" $branch"
		fi
	fi

	# Virtualenv
	local venv_prompt=
	if [ -n "$VIRTUAL_ENV" ]; then
    venv_prompt=" $BLUE$prompt_venv_symbol$(basename $VIRTUAL_ENV)$NOCOLOR"
	fi

	# Only show username if not default
	local user_prompt=
	[ "$USER" != "$local_username" ] && user_prompt="$user_color$USER$NOCOLOR"

	# Show hostname inside SSH session
	local host_prompt=
	[ -n "$remote" ] && host_prompt="@$YELLOW$HOSTNAME$NOCOLOR"

	# Show delimiter if user or host visible
	local login_delimiter=
	[ -n "$user_prompt" ] || [ -n "$host_prompt" ] && login_delimiter=":"

	# Format prompt
	first_line="$user_prompt$host_prompt$login_delimiter$DARK_BLUE\w$NOCOLOR$git_prompt$venv_prompt"
	# $? is a status of last command, should be processed every time prompt prints
	second_line="\`if [ \$? = 0 ]; then echo \$MAGENTA; else echo \$RED; fi\`\$prompt_symbol\$NOCOLOR "
  PS1="\n$first_line\n$second_line"

	# Multiline command
	PS2="$GRAY… $MAGENTA$prompt_symbol$NOCOLOR "

	# Terminal title
	local title="$(basename "$PWD")"
	[ -n "$remote" ] && title="$title \xE2\x80\x94 $HOSTNAME"
	echo -ne "\033]0;$title"; echo -ne "\007"
}

# Show awesome prompt only if Git is istalled
command -v git >/dev/null 2>&1 && PROMPT_COMMAND=prompt_command
